---
format:
  html:
    author: "Ondřej Mottl"
    toc: true
    toc-depth: 5
    keep-md: true
    code-link: true
    embed-resources: true
    code-line-numbers: true
    theme: [default, _exercise_theme.scss]
---

# Basic functions of getting pollen data with neotoma2

Simple example of working with pollen data using the [{neotoma2} package](https://open.neotomadb.org/neotoma2/).

## Setup

```{r}
#| label: setup
#| include: true
#| output: false

# load libraries
library(tidyverse) # general data wrangling and visualisation ✨
library(neotoma2) # # access to the Neotoma database 🌿
library(pander) # nice tables 😍
library(here) # for working directory 🗺️
library(janitor) # string cleaning 🧹
library(geojsonsf) # geojson spatial data 🌐

# set the working directory
here::i_am("R/Exercises/01_getting_data_with_neotoma2-online.qmd")

# get the plot_table() function
source(
  here::here(
    "R/Functions/plot_table.R"
  )
)

# quarto render options
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
  fig.width = 7,
  fig.height = 7,
  fig.align = "center",
  out.width = "100%",
  echo = TRUE
)
```

```{r}
#| label: set_theme
#| include: false
#| output: false
#| echo: false
source(
  here::here(
    "R/set_r_theme.R"
  )
)
```

Let's practise some of the basic functions of the `{neotoma2}` package.

## Sites

```{r}
#| label: 2.0.
#| eval: false
#| echo: true
# check the documentation
?neotoma2::get_sites()
```

### Search by IDs

Search for site by a single numeric ID:

```{r}
#| label: 2.1.1
neotoma2::get_sites(15799) %>% 
  plot_table()
```

Search for sites with multiple IDs:

```{r}
#| label: 2.1.2
neotoma2::get_sites(
  c(15799, 15683)
) %>% 
  plot_table()
```

Searching for Sites by Name. Note that `%` is a wildcard character:

```{r}
#| label: 2.1.3
neotoma2::get_sites(sitename = "Alex%") %>% 
  plot_table()
```

### Searching for Sites by Age

Record span at least 8200 years:

```{r}
#| label: 2.2.1
neotoma2::get_sites(
  ageof = 8200,
  all_data = FALSE # this will only show 25 records
) %>% 
 plot_table(head = TRUE)
```

Record must PARTLY span the age range

```{r}
#| label: 2.2.2
neotoma2::get_sites(
  minage = 5000,
  maxage = 8000,
  all_data = FALSE # this will only show 25 records
) %>% 
 plot_table(head = TRUE)
```

Record must COMPLETELY span the age range

```{r}
#| label: 2.2.3
neotoma2::get_sites(
  ageyoung = 5000,
  ageold = 8000,
  all_data = FALSE # this will only show 25 records
) %>% 
 plot_table(head = TRUE)
```

## Datasets

You can search by all the same age properties as for sites (`ageof`, `minage`, `maxage`, `ageyoung`, `ageold`).

```{r}
#| label: 3.0.
#| eval: false
#| echo: true
# check the documentation
?neotoma2::get_datasets()
```

### Search by IDs

```{r}
#| label: 3.1.
neotoma2::get_datasets(
  c(5, 10, 15, 20)
) %>% 
 plot_table(head = TRUE)
```

### Search by type

```{r}
#| label: 3.2.
neotoma2::get_datasets(
  all_data = FALSE, # running with `all_data = TRUE` is heavy on the server
  datasettype = "pollen"
) %>% 
 plot_table(head = TRUE)
```

### Search by geo location

Go to [geojson.io](https://geojson.io/) and get the coordinates of a polygon.

For example:

```{r}
#| label: JSON example
#| eval: false
{
        "type": "FeatureCollection",
        "features": [
          {
            "type": "Feature",
            "properties": {},
            "geometry": {
              "coordinates": [
                [
                  ...
                ]
              ],
              "type": "Polygon"
            }
          }
        ]
      }
```

Now, we can use the coordinates to search for datasets:

```{r}
#| label: 3.3.1
sel_polygon <-
  geojsonsf::geojson_sf(
    '{
        "type": "FeatureCollection",
        "features": [
          {
            "type": "Feature",
            "properties": {},
            "geometry": {
              "coordinates": [
                [
                  [
                    8.885566596626347,
                    49.771446037909755
                  ],
                  [
                    10.222591262669596,
                    48.31793402541106
                  ],
                  [
                    12.353498585013057,
                    47.56711633708565
                  ],
                  [
                    16.327096438141012,
                    48.350003278892444
                  ],
                  [
                    16.435889807717132,
                    49.83389459390426
                  ],
                  [
                    16.022485237853516,
                    51.17135995959822
                  ],
                  [
                    14.214447964984942,
                    51.55099235084026
                  ],
                  [
                    10.091782211463311,
                    50.45895941972614
                  ],
                  [
                    9.223835080442456,
                    50.26942261795418
                  ],
                  [
                    8.885566596626347,
                    49.771446037909755
                  ]
                ]
              ],
              "type": "Polygon"
            }
          }
        ]
      }'
  )

neotoma2::get_datasets(
  loc = sel_polygon
) %>% 
 plot_table()
```

### Filter

You can additionally filter the compilation based on `lat`, `long`, `altitude`, `age_range_young`, and/or `age_range_old`

```{r}
#| label: 3.4.0
#| eval: false
#| echo: true
# check the documentation
?neotoma2::filter()
```

```{r}
#| label: 3.4.1
neotoma2::get_datasets(
  loc = sel_polygon
) %>%
  neotoma2::filter(
    datasettype == "pollen" &
      altitude > 500 &
      age_range_young <= 1e3
  ) %>% 
 plot_table()
```

## Downloading data

### Download individual record

Let's download a record with `datasetid` 24279

```{r}
#| label: 4.1.
dataset_24279 <-
  neotoma2::get_downloads(24279)

plot_table(
  dataset_24279@sites[[1]]@collunits[[1]])
```

### Download multiple records

Download all records by sites

```{r}
#| label: 4.2.1
# get sites information
data_sites_alex <-
neotoma2::get_sites(sitename = "Alex%") %>%
  # get datasets information
  neotoma2::get_datasets() %>%
  # get downloads
  neotoma2::get_downloads()


plot_table(data_sites_alex)
```

Download all records by datasets

```{r}
#| label: 4.2.2
# get datasets information
data_datasets_polygon <-
neotoma2::get_datasets(
  loc = sel_polygon
) %>%
  # filter datasets
  neotoma2::filter(
    datasettype == "pollen" &
      altitude > 500 &
      age_range_young <= 1e3
  ) %>%
  # get downloads
  neotoma2::get_downloads()

plot_table(data_datasets_polygon)
```
